/*
Задание No1. Проверка на пустоту
Напишите функцию isEmpty(obj), которая возвращает true, если у объекта нет свойств,
иначе false.
*/

obj = 5;

function isEmpty(obj) {
    for (let key in obj) {
        return false;
    }
    return true;
}

isEmpty(obj);

/*
Задание No2. Умножаем все числовые свойства на 2
Создайте функцию multiplyNumeric(obj), которая умножает все числовые свойства
объекта obj на 2.
Обратите внимание, что multiplyNumeric не нужно ничего возвращать. Следует
напрямую изменять объект.
P.S. Используйте typeof для проверки, что значение свойства числовое.
*/

let obj = {
    name: 2,
};

function multiplyNumeric(obj) {
    for (let key in obj) {
        if (typeof obj[key] === "number") {
            obj[key] = obj[key] * 2;
            alert(obj[key]);
        }
    }
}

multiplyNumeric(obj);

/*
Задание No3. Ввод числового значения
Создайте функцию readNumber, которая будет запрашивать ввод числового значения
до тех пор, пока посетитель его не введёт.
функция должна возвращать числовое значение.
Также надо разрешить пользователю остановить процесс ввода, отправив пустую
строку или нажав «Отмена». В этом случае функция должна вернуть null.
*/

let i = prompt('Введите число.');

function readNumber(i) {
    while (i)
        if (!isFinite(i)) {
            i = prompt('Введите число.');
            continue;
        } else if (isFinite(i)) {
            alert(`Ваше число ${i}.`);
            break;
        } else if (i == "") {
            alert('NULL');
        }
}

readNumber(i);

/*
Задание No4. Случайное число от min до max
Встроенный метод Math.random() возвращает случайное число от 0 (включительно) до
1 (но не включая 1).
Напишите функцию random(min, max), которая генерирует случайное число с
плавающей точкой от min до max (но не включая max).
*/

function random(min, max) {
    return min + Math.random() * (max - min);
}

alert(random(1, 5));

/*
Задание No5. Случайное целое число от min до max
Напишите функцию randomInteger(min, max), которая генерирует случайное целое
(integer) число от min до max (включительно).
Любое число из интервала min...max должно появляться с одинаковой вероятностью.
*/

function randomInteger(min, max) {
    let rand = min + Math.random() * max;
    return Math.floor(rand);
}

alert(randomInteger(1, 5));

/*
Задание No6. Сделать первый символ заглавным
Напишите функцию ucFirst(str), возвращающую строку str с заглавным первым
символом.
*/

let str = "вася";

function ucFirst(str) {
    return str.charAt(0).toUpperCase() + str.slice(1);
}

alert(ucFirst(str));

/*
Задание No7. Проверка на спам
Напишите функцию checkSpam(str), возвращающую true, если str содержит 'viagra' или
'XXX', а иначе false.
Функция должна быть нечувствительна к регистру.
*/

function checkSpam(str) {
    let lowerStr = str.toLowerCase();
    return lowerStr.includes('viagra') || lowerStr.includes('xxx');
}

alert(checkSpam('buy ViAgRA now'));
alert(checkSpam('free xxxxx'));
alert(checkSpam("innocent rabbit"));

/*
Задание No8. Усечение строки
Создайте функцию truncate(str, maxlength), которая проверяет длину строки str и, если
она превосходит maxlength, заменяет конец str на "...", так, чтобы её длина стала равна
maxlength.
Результатом функции должна быть та же строка, если усечение не требуется, либо,
если необходимо, усечённая строка.
*/

function truncate(str, maxlength) {
    if (str.length > maxlength) {
        alert(str.slice(0, maxlength) + '...');
    } else {
        alert(str);
    }
}

truncate("Вот, что мне хотелось бы сказать на эту тему:", 20);
truncate("Всем привет!", 20);

/*
Задание No9. Выделить число
Есть стоимость в виде строки "$120". То есть сначала идёт знак валюты, а затем –
число.
Создайте функцию extractCurrencyValue(str), которая будет из такой строки выделять
числовое значение и возвращать его.
*/

function extractCurrencyValue(str) {
    alert(str.slice(1));
}

extractCurrencyValue('$120');

/*
Задание No10. Сумма введённых чисел
Напишите функцию sumInput(), которая:
• Просит пользователя ввести значения, используя prompt и сохраняет их в
массив.
• Заканчивает запрашивать значения, когда пользователь введёт не числовое
значение, пустую строку или нажмёт «Отмена».
• Подсчитывает и возвращает сумму элементов массива.
• P.S. Ноль 0 – считается числом, не останавливайте ввод значений при вводе «0».
*/

function sumInput() {
    let arr = [];
    while (true) {
        let i = prompt(`Введите число.`);
        if (!isFinite(i) || i === null || i === '') {
            break;
            arr.push(+i);
        }
    }
    let sum = 0;
    for (let arr of i) {
        sum += i;
    }
    return (sum);
}

sumInput();

/*
Задание No11. Подмассив наибольшей суммы
Задача: найти непрерывный подмассив в arr, сумма элементов в котором максимальна.
Функция getMaxSubSum(arr) должна возвращать эту сумму.
Попробуйте придумать быстрое решение: O(n2), а лучше за О(n) операций.
*/

function getMaxSubSum(arr) {
    let maxSum = 0;
    for (let i = 0; i < arr.length; i++) {
        let sumFixedStart = 0;
        for (let j = i; j < arr.length; j++) {
            sumFixedStart += arr[j];
            maxSum = Math.max(maxSum, sumFixedStart);
        }
    }
    return maxSum;
}

alert(getMaxSubSum([1, -2, 3, 4, -9, 6]));
alert(getMaxSubSum([-1, 2, 3, -9]));
alert(getMaxSubSum([2, -1, 2, 3, -9]));
alert(getMaxSubSum([-1, 2, 3, -9, 11]));
alert(getMaxSubSum([100, -9, 2, -3, 5]));
alert(getMaxSubSum([1, 2, 3]));
alert(getMaxSubSum([-1, -2, -3]));

/*
Задание No12. Обязателен ли "else"?
Следующая функция возвращает true, если параметр age больше 18.
В ином случае она запрашивает подтверждение через confirm и возвращает его
результат:
function checkAge(age) {
if (age > 18) {
return true;
} else {
// ...
return confirm('Родители разрешили?');
}
}
Будет ли эта функция работать как-то иначе, если убрать else?
Будет. С else всплывает ещё одно диалоговое окно, в котором спрашивается, разрешили
ли родители. В случае, если этого окна не будет, при возрасте меньше 18 просто
ничего не произойдёт, диалоговое окно исчезнет, на это скрипт закончится.
function checkAge(age) {
if (age > 18) {
return true;
}
// ...
return confirm('Родители разрешили?');
}
Есть ли хоть одно отличие в поведении этого варианта?
Нет, так как, если условие соблюдено, скрипт просто завершается.
А, в случае, если условие соблюдено, не всплывает второе диалоговое окно.
*/

/*
Задание No13. Перепишите функцию, используя оператор '?' или '||'
Следующая функция возвращает true, если параметр age больше 18.
В ином случае она задаёт вопрос confirm и возвращает его результат.
Перепишите функцию, чтобы она делала то же самое, но без if, в одну строку.
Сделайте два варианта функции checkAge:
Используя оператор ?
Используя оператор ||
*/

// Используя оператор ?

function checkAge(age) {
    return true : return confirm('Родители разрешили?');
}
checkAge(age);

// Используя оператор ||

function checkAge(age) {
    return true || confirm('Родители разрешили?');
}
checkAge(age);

/*
Задание No14. Функция min(a, b)
Напишите функцию min(a,b), которая возвращает меньшее из чисел a и b.
*/

function min(a, b) {
    alert(Math.min(a, b));
}

min(2, 5);
min(3, -1);
min(1, 1);

/*
Задание No15. Функция pow(x,n)
Напишите функцию pow(x,n), которая возвращает x в степени n. Иначе говоря,
умножает x на себя n раз и возвращает результат.
Создайте страницу, которая запрашивает x и n, а затем выводит результат pow(x,n).
Запустить демо.
P.S. В этой задаче функция обязана поддерживать только натуральные значения n, т. е.
целые от 1 и выше.
*/

function pow(x, n) {
    alert(Math.pow(x, n));
}

pow(3, 2);
pow(3, 3);
pow(1, 100);

/*
Задание No16. Перепишите с использованием функции-стрелки
Замените код Function Expression стрелочной функцией.
*/

let func = function {
    ask(question, yes, no) ?
        () => (confirm(question)) yes() :
    () => no();
}
ask(
    "Вы согласны?",
    function() {
        () => alert("Вы согласились.");
    },
    function() {
        () => alert("Вы отменили выполнение.");
    }
);

/*
Задание No17. Робинзон Крузо
Ваш месячный доход - 3333 попугая. Вы хотите купить пальму за 8000 попугаев.
Вычислите, за какой промежуток времени вы насобираете на пальму, при условии,
что ваши ежемесячные расходы составляют 1750 попугаев.
*/

let income = 3333;
let palmTreeCost = 8000;
let expenses = 1750;
let iterationNum = 0;

function calcpalmTreeCost() {
    let profit = income - expenses;
    while (true) {
        if (profit < palmTreeCost) {
            profit = profit + profit;
            alert(profit);
            iterationNum++;
            if (profit > palmTreeCost) {
                alert(`Я насобираю на пальму за ${iterationNum} месяца.`);
                break;
            }
        }
    }
}

calcpalmTreeCost();

/*
Задание No18. Вопросы пользователю
1. Спросить у пользователя 10 чисел
2. Если число
- положительное —> ничего не делать
- отрицательная —> получить их сумму
3. Вывести сумму отрицательных чисел, которые ввел пользователь
ВАЖНО: по условиям задачи в вашем коде должен быть только 1 prompt и
только 1 цикл for
*/

function showSum () {
    for (let i = 0; i < 10; i++) {
        j = prompt('Введите число.');
        if (j < 0) {
            alert(+j + +j);
        }
    }
}

showSum();

/*
Задание No19. Скопирован ли массив?
Что выведет следующий код?
let fruits = ["Яблоки", "Груша", "Апельсин"];
// добавляем новое значение в "копию"
let shoppingCart = fruits;
shoppingCart.push("Банан");
// что в fruits?
alert( fruits.length ); // ?

В fruits будет добавлен новый элемент, потому что изменяется первоначальный масив,
не только ссылка на него.
*/

/*
Задание No20. Операции с массивами
Давайте произведём 5 операций с массивом.
Создайте массив styles с элементами «Джаз» и «Блюз».
Добавьте «Рок-н-ролл» в конец.
Замените значение в середине на «Классика». Ваш код для поиска значения в
середине должен работать для массивов с любой длиной.
Удалите первый элемент массива и покажите его.
Вставьте «Рэп» и «Регги» в начало массива.
Массив по ходу выполнения операций:
Джаз, Блюз
Джаз, Блюз, Рок-н-ролл
Джаз, Классика, Рок-н-ролл
Классика, Рок-н-ролл
Рэп, Регги, Классика, Рок-н-ролл
*/

// 1. Создайте массив styles с элементами «Джаз» и «Блюз».

styles = ['Джаз', 'Блюз'];

// 2. Добавьте «Рок-н-ролл» в конец.

styles.push (' Рок-н-ролл');

// 3. Замените значение в середине на «Классика».

index = styles.indexOf('Блюз');
if (index !== -1) {
    styles[index] = ' Классика';
}

/*
4. Удалите первый элемент массива и покажите его.
(Я не поняла, показать элемент массива или сам массив после зменения, поэтому
на всякий случай вывела оба варианта).
 */

alert(styles.shift());
alert(styles);

// 5. Вставьте «Рэп» и «Регги» в начало массива.

styles.unshift('Рэп', ' Регги');
alert(styles);

/*
Задание No21. Вызов в контексте массива
Каков результат? Почему?
let arr = ["a", "b"];
arr.push(function() {
alert( this );
})
arr[2](); // ?

Я думала, что ничего не произойдёт как минимум потому, что «this» не в кавычках.
Но оказалось, что в последнем значении будет отображён синтаксис, который указан
в push - то есть «function() {
alert( this );
}».
*/